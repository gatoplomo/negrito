//tablas 

usuarios

CREATE TABLE usuarios (
  id INT AUTO_INCREMENT PRIMARY KEY,
  nombre VARCHAR(255) NOT NULL,
  correo VARCHAR(255) NOT NULL,
  contraseña VARCHAR(255) NOT NULL,
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  actualizado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  UNIQUE KEY (nombre),
  UNIQUE KEY (correo)
);


CREATE TABLE sesiones (
  id VARCHAR(255) PRIMARY KEY,
  user_id INT NOT NULL,
  creado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  actualizado_en TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  FOREIGN KEY (user_id) REFERENCES usuarios(id)
);

https://arduino.esp8266.com/stable/package_esp8266com_index.json

sudo apt install -y mosquitto 

curl -sL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
https://tecadmin.net/how-to-install-mongodb-on-ubuntu-22-04/


ALTER USER 'root'@'localhost'IDENTIFIED WITH mysql_native_password BY 'plomo1994';


Objeto grupo para grupos /grupos


{
  "id_grupo": "identificador_externo",
  "nodos_grupo": [
    {
      "posicion_nodo": "valor_posicion_nodo1",
      "sensores": [
        {
          "modelo_sensor": "valor_modelo1",
          "variables_sensor": "valor_variables1"
        },
        {
          "modelo_sensor": "valor_modelo2",
          "variables_sensor": "valor_variables2"
        }
      ],
      "accionadores": [
        {
          "num_accionador": "valor_num_accionador1",
          "accion": "valor_accion1"
        },
        {
          "num_accionador": "valor_num_accionador2",
          "accion": "valor_accion2"
        }
      ]
    }
  ]
}

http://drazzy.com/package_drazzy.com_index.json
ATTinyCore
attiny88 micronucleous

{
  "grupo": "grupo_001",
  "rtc_nodo": {
    "fecha": "23-04-2023",
    "hora": "13:30"
  },
  "nodos": [
    {
      "id_nodo": "nodo_001",
      "accionadores": [
        {
          "id_accionador": "accionador_001",
          "status": 1
        },
        {
          "id_accionador": "accionador_002",
          "status": 1
        }
      ],
      "sensores": [
        {
          "id_sensor": "sensor_001",
          "modelo": "DTH11",
          "lecturas": {
            "temperatura": 20.29999924,
            "humedad": 41
          }
        }
      ]
    },
    {
      "id_nodo": "nodo_002",
      "accionadores": [
        {
          "id_accionador": "accionador_001",
          "status": 0
        },
        {
          "id_accionador": "accionador_002",
          "status": 1
        }
      ],
      "sensores": [
        {
          "id_sensor": "sensor_001",
          "modelo": "DTH11",
          "lecturas": {
            "temperatura": 0,
            "humedad": 0
          }
        },
        {
          "id_sensor": "sensor_002",
          "modelo": "MQ2",
          "lecturas": {
            "ppm": 0
          }
        }
      ],
      "sensores_estado": [
        {
          "id_sensor_estado": "sensor_estado_001",
          "modelo_sensor_estado": "DRCONT",
          "estado": 0
        },
        {
          "id_sensor_estado": "sensor_estado_002",
          "modelo_sensor_estado": "PIR",
          "estado": 0
        }
      ]
    }
  ]
}


sudo systemctl start mongod.service



sudo apt-get update
sudo apt-get install python3-bson python3-pymongo

app.post("/crear_grupo", function(req, res) {
  console.log("Insertando Grupo")
  const db = client.db(dbName);
  const collection = db.collection("grupo");

 const grupo = {
  id_grupo: "grupo_001",
  nodos_grupo: [
    {
      id_nodo: "nodo_001",
      sensores: [
        {
          id_sensor:"sensor_001",
          modelo_sensor: "DTH11",
          variables_sensor: {
            temperatura: true,
            humedad: true
          }
        }
      ],
      accionadores: [
        {
          id_accionador: "accionador_001",
          accion_accionador: "Alarma"
        },
        {
          id_accionador: "accionador_002",
          accion_accionador: "Ventilador"
        }
      ]
    },{
      id_nodo: "nodo_002",
      sensores: [
        {
          id_sensor:"sensor_001",
          modelo_sensor: "DTH11",
          variables_sensor: {
            temperatura: true,
            humedad: true
          }
        }
      ], sensores_estado: [
        {
          id_sensor_estado:"sensor_estado_001",
          modelo_sensor_estado: "CONTACT"
        }, {
          id_sensor_estado:"sensor_estado_002",
          modelo_sensor_estado: "PIR"
        }
      ],
      accionadores: [
        {
          id_accionador: "accionador_001",
          accion_accionador: "encender"
        },
        {
          id_accionador: "accionador_002",
          accion_accionador: "apagar"
        }
      ]
    },  {
      id_nodo: "nodo_003",
      sensores: [
        {
          id_sensor:"sensor_001",
          modelo_sensor: "DTH11",
          variables_sensor: {
            temperatura: true,
            humedad: true
          }
        }, {
          id_sensor:"sensor_002",
          modelo_sensor: "HUMSOND",
          variables_sensor: {
            humedad: true
          }
        }
      ],
      accionadores: [
        {
          id_accionador: "accionador_001",
          accion_accionador: "Alarma"
        },
        {
          id_accionador: "accionador_002",
          accion_accionador: "Ventilador"
        }
      ]
    }
  ]
};


  collection.insertOne(grupo, (err, result) => {
    if (err) throw err;
    
    console.log('El objeto "Grupo" ha sido insertado exitosamente en la colección "grupo"');
  });
});



1.- Instalar Ubuntu Server 
2.- Sudo  Apt Install Npm
3.-fallo instalacion npm
4.-cambio del adaptador nat a puente
5.- sudo apt install net-tools
6.-ifconfig
7.- sudo apt update
8.- sudo apt install npm
9.-npm install node
10.- sudo apt update
11.- sudo npm install git 
12.- git clone 
13.-sudo npm install mosquitto xxxxx
14.-192.168.126.193
15.- script flask
16.- no module flask
17.- npm install axios 



https://www.fosstechnix.com/how-to-install-mongodb-server-on-ubuntu-24-04/
sudo apt update
sudo apt-get install gnupg curl


curl -fsSL https://www.mongodb.org/static/pgp/server-7.0.asc | sudo gpg -o /usr/share/keyrings/mongodb-server-7.0.gpg --dearmor

echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list


sudo apt-get update

sudo apt-get install -y mongodb-org

sudo systemctl start mongod







python --version
pip --version
python -m venv flask_env
flask_env\Scripts\activate
pip install flask pandas matplotlib
python -m pip install --upgrade pip
pip install flask pandas matplotlib --default-timeout=100
pip install flask pandas matplotlib --index-url https://pypi.org/simple/
pip install flask pandas matplotlib --proxy="http://proxy.server:port"
pip install <ruta-al-archivo>.whl
python app.py
Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy RemoteSigned
deactivate

""  shift dos puntitos al lado de la ce francesa 

corchetes sin apretar nada dos teclas al lado de la P

= dos teclas despues del 0 sin apretar nada

dos puntos shift enie

pipe , shitf C franesa

gui bajo shift alado de cero

sigo mayor menor shift dos puntos


const grupo = {
  id_grupo: "grupo_001",
  nodos_grupo: [
    {
      id_nodo: "nodo_001",
      sensores: [
        {
          id_sensor:"sensor_001",
          modelo_sensor: "DTH11",
          variables_sensor: {
            temperatura: true,
            humedad: true
          }
        }
      ],
      accionadores: [
        {
          id_accionador: "accionador_001",
          accion_accionador: "Alarma"
        },
        {
          id_accionador: "accionador_002",
          accion_accionador: "Ventilador"
        }
      ]
    },{
      id_nodo: "nodo_002",
      sensores: [
        {
          id_sensor:"sensor_001",
          modelo_sensor: "DTH11",
          variables_sensor: {
            temperatura: true,
            humedad: true
          }
        }
      ], sensores_estado: [
        {
          id_sensor_estado:"sensor_estado_001",
          modelo_sensor_estado: "CONTACT"
        }, {
          id_sensor_estado:"sensor_estado_002",
          modelo_sensor_estado: "PIR"
        }
      ],
      accionadores: [
        {
          id_accionador: "accionador_001",
          accion_accionador: "encender"
        },
        {
          id_accionador: "accionador_002",
          accion_accionador: "apagar"
        }
      ]
    },  {
      id_nodo: "nodo_003",
      sensores: [
        {
          id_sensor:"sensor_001",
          modelo_sensor: "DTH11",
          variables_sensor: {
            temperatura: true,
            humedad: true
          }
        }, {
          id_sensor:"sensor_002",
          modelo_sensor: "HUMSOND",
          variables_sensor: {
            humedad: true
          }
        }
      ],
      accionadores: [
        {
          id_accionador: "accionador_001",
          accion_accionador: "Alarma"
        },
        {
          id_accionador: "accionador_002",
          accion_accionador: "Ventilador"
        }
      ]
    }
  ]
};
